#!/bin/bash


# To be used in container name, codebase directory (in dev environment), db name, db user, and volume name (for now, until we integrate orchestration)
INSTALLATION_NAME=imaging_1

# can use dev/test/prod
ENVIRONMENT=dev

# can use addictions/child-development/imaging/vaccines
VERTICAL=imaging

# version of the docker image to create container from
VERTICAL_VERSION=1.0.0

# host port through which you can access openemr and the api from outside the container
OPENEMR_PORT=8881





###############################################################
# Relevant only for dev environment #
###############################################################

HOST_CODEBASE_PATH=/home/joe/projects

OPENEMR_BRANCH=master

GENERIC_BRANCH=develop

VERTICAL_BRANCH=develop

CLIENT_APP_BRANCH=develop





###############################################################
# Relevant only for test environment #
###############################################################

# where the installation's server and client code exist
SERVER_ADDRESS=40.87.137.89

# host port through which you can access the client application from outside the container
CLIENT_PORT=8891




###############################################################
# Relevant only for test/prod environments #
###############################################################

# If we're using an unclosed version of openemr. If so, on each upgrade we will also run the openemr upgrade
ROLLING_OPENEMR_VERSION=yes




###############################################################
# Other IPs #
###############################################################

# get docker host ip in docker network bridge
BRIDGE_HOST_IP=$(ip -4 addr show docker0 | grep -Po 'inet \K[\d.]+')

MYSQL_HOST=$BRIDGE_HOST_IP
